# main.tf

provider "aws" {
  region = "us-east-1"  # Adjust region as needed
  access_key = "{{ access_key }}"
  secret_key = "{{ secret_key }}"
}

# VPC
resource "aws_vpc" "main" {
  cidr_block = "10.0.0.0/16"
  enable_dns_support = true
  enable_dns_hostnames = true
  tags = {
    Name = "main_vpc"
  }
}

# Subnet
resource "aws_subnet" "subnet" {
  vpc_id                  = aws_vpc.main.id
  cidr_block              = "10.0.1.0/24"
  availability_zone       = "us-east-1a"
  map_public_ip_on_launch = true
  tags = {
    Name = "main_subnet"
  }
}

# Internet Gateway
resource "aws_internet_gateway" "gateway" {
  vpc_id = aws_vpc.main.id
  
  tags = {
    Name = "main_internet_gateway"
  }
}

# Route Table
resource "aws_route_table" "public" {
  vpc_id = aws_vpc.main.id
  
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gateway.id
  }
  
  tags = {
    Name = "public_route_table"
  }
}

# Associate Route Table with Subnet
resource "aws_route_table_association" "public" {
  subnet_id      = aws_subnet.subnet.id
  route_table_id = aws_route_table.public.id
}


# Security Group
resource "aws_security_group" "default" {
  vpc_id = aws_vpc.main.id
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    description = "HTTP"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  
  tags = {
    Name = "default_security_group"
  }
}

# Key Pair
resource "aws_key_pair" "deployed" {
  key_name   = "my-key"
  public_key = file("~/.ssh/id_ed25519.pub")  # Replace with path to your public key
}

# EC2 Instance
resource "aws_instance" "web" {
  ami           = "{{ iam }}"  # Replace with a valid AMI ID
  instance_type = "t2.micro"
  key_name      = aws_key_pair.deployed.key_name
  subnet_id     = aws_subnet.subnet.id
  vpc_security_group_ids = [aws_security_group.default.id]

  tags = {
    Name = "web_instance"
  }
  associate_public_ip_address = true
}
